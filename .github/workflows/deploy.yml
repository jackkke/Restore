name: GraalVM build
on:
  push:
    tags:
        - '*'
permissions:
  contents: write
jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4
      - uses: graalvm/setup-graalvm@v1
        with:
          java-version: '21'
          distribution: 'graalvm'
      - name: Maven package
        run: |
          mvn -Pall clean package
          cp restore.yml ./target
          cd target
          java -agentlib:native-image-agent=config-output-dir=../src/main/resources/META-INF/native-image -jar Restore-all.jar
          cd ../
          mvn -Pnative package
      - name: Prepare Release File (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          mkdir Restore-Linux
          cp target/Restore ./Restore-Linux
          cp restore.yml ./Restore-Linux
          zip -r -q Restore-Linux-${{ github.ref_name }}.zip Restore-Linux
          mkdir Restore-Java
          cp target/Restore-all.jar ./Restore-Java
          cp restore.yml ./Restore-Java
          zip -r -q Restore-Java-${{ github.ref_name }}.zip Restore-Java
      - name: Prepare Release File (windows only)
        if: matrix.platform == 'windows-latest'
        run: |
          mkdir Restore-Windows
          cp target/Restore.exe ./Restore-Windows
          cp restore.yml ./Restore-Windows
          Compress-Archive -Path Restore-Windows -DestinationPath Restore-Windows-${{ github.ref_name  }}.zip
      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            Restore-*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_TOKEN }}